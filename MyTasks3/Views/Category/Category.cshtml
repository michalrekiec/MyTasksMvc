@model MyTasks3.Models.ViewModels.CategoryViewModel

@{
    ViewData["Title"] = "Category";
}

<link rel="stylesheet" href="~/css/site.css" />

<h1 class="mb-3">@Model.Heading</h1>


<div class="row">
    <div class="col-8">
        @using (Html.BeginForm("Category", "Category"))
        {
            @Html.HiddenFor(x => x.CatId)
            @Html.HiddenFor(x => x.IsMainCategory)
            @Html.ValidationSummary()
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(x => x.Name)
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", autofocus = "autofocus" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.ColorRgb)
                <div class="row">
                    <div class="col">
                        @Html.TextBoxFor(x => x.ColorRgb, new { @class = "form-control", @id = "colorHex",
                            autocomplete = "off", @readonly = "readonly" })
                    </div>
                    <div class="col">
                        <input type="color" class="form-control" value="#@Model.ColorRgb" id="colorRgb" />
                        @Html.ValidationMessageFor(x => x.ColorRgb)
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-primary btn-lg mt-2">Zapisz</button>
        }
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>


@section Scripts
{
    <script type="text/javascript">

        const colorPicker = document.querySelector('#colorRgb');

        colorPicker.addEventListener("change", e => {
            updateTextBox(colorPicker)
        });


        function updateTextBox(colorPickerValue) {
            let hexValue = colorPickerValue.value.substring(1, 7);
            document.querySelector('#colorHex').value = hexValue;
        }

    </script>
}
